/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.2/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'groovy'
apply plugin: 'application'

mainClassName = 'au.org.dcw.twitter.ingest.RefetchTweets'

task wrapper(type: Wrapper) {
  gradleVersion = '4.2'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    baseName = 'twitter-refetch-tweets'
    version =  '0.1'
}

repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.25'

    // Use the latest groovy version for building this app
    compile 'org.codehaus.groovy:groovy-all:2.4.12'

    compile 'org.twitter4j:twitter4j-core:4.0.6'
    compile 'com.beust:jcommander:1.72'
    compile 'com.fasterxml.jackson.core:jackson-core:2.9.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.1'


    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    //testCompile 'junit:junit:4.12'
}

def timestamp() {
    def date = new Date()
    return date.format('yyyyMMddHHmmss')
}

distributions {
    main {
        contents {
            from { 'README.md' }
            from { 'LICENSE' }
            from { 'twitter.properties-template' }
            from { 'proxy.properties-template' }
        }
    }
    timestamped {
        baseName = project.name + '-SNAPSHOT-' + timestamp()
        contents {
            with main.contents
        }
    }
    privileged {
        baseName = project.name + '_with-credentials-SNAPSHOT-' + timestamp()
        contents {
            with main.contents
            // include own twitter credentials
            from { 'twitter.properties' }
        }
    }
}
